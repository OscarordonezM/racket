#lang racket
(require db)

(define pgc
(mysql-connect   #:server "localhost"
                 #:port 3306
                 #:database "AquaBot"
                 #:user "root"
                 ))

(define cedulaR (vector->values (car(query-rows pgc "SELECT `perCedula` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define nombreR (vector->values (car(query-rows pgc "SELECT `perNombres` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define apellidoR (vector->values (car(query-rows pgc "SELECT `perApellidos` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define sexoR (vector->values (car(query-rows pgc "SELECT `perSexo` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define estratoR (vector->values (car(query-rows pgc "SELECT `perEstrato` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define nPersonasR (vector->values (car(query-rows pgc "SELECT `perNumPersonasVivienda` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define conMR (vector->values (car(query-rows pgc "SELECT `comConsumoMensual` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define fechaR (vector->values (car(query-rows pgc "SELECT `comFecha` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))
(define altiR (vector->values (car(query-rows pgc "SELECT `ciuAltitud` FROM `ciudad` INNER join `persona` INNER JOIN `consumomensual` WHERE perCedula = 123 and ciuNombre = perCiudad")) 0 1))

(define precio 1)
(define multa "NO")
(define recomendacion 1)
(define msj1 "Su consumo es óptimo. Su consumo fue ejemplar Gracias por contribuir con el medio ambiente. ")
(define msj2 "Debe moderar su consumo. A partir de este momento se le adiciona una pequeña multa a la factura.")
(define msj3 "Debe moderar su consumo, ha consumido más de lo debido por lo tanto a partir de este momento se le restringirá el consumo de agua por el resto del mes y se le adiciona una multa en el recibo de pago")
(define msj4 "Su consumo es crítico, tenga en cuenta en no derrochar el agua el próximo mes. A partir de este momento se le restringirá el consumo de agua por el resto del mes y se le adiciona una gran multa en el recibo de pago.")




(cond
  ((= estratoR 1) (if (< altiR 1000)
                      (if (< conMR 17)
                          (let ((band 0))(set! precio (* 300 conMR)))
                          (if(= conMR 17)
                             (let ((band 0))(set! precio (* 350 conMR)) (set! multa "SI")(set! recomendacion 2))
                             (let ((band 0))(set! precio (* 450 conMR)) (set! multa "SI")(set! recomendacion 3))
                          )
                      )
                      (if(< altiR 2000)
                         (if (< conMR 14)
                             (let ((band 0))(set! precio (* 300 conMR)))
                             (if(= conMR 14)
                                (let ((band 0))(set! precio (* 350 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 450 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                         (if (< conMR 13)
                             (let ((band 0))(set! precio (* 300 conMR)))
                             (if(= conMR 13)
                                (let ((band 0))(set! precio (* 350 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 450 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                      )
                  )
)
  
  ((= estratoR 2)  (if (< altiR 1000)
                      (if (< conMR 17)
                          (let ((band 0))(set! precio (* 450 conMR)))
                          (if(= conMR 17)
                             (let ((band 0))(set! precio (* 500 conMR)) (set! multa "SI")(set! recomendacion 2))
                             (let ((band 0))(set! precio (* 625 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                      )
                      (if(< altiR 2000)
                         (if (< conMR 14)
                             (let ((band 0))(set! precio (* 450 conMR)))
                             (if(= conMR 14)
                                (let ((band 0))(set! precio (* 500 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 625 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                         (if (< conMR 13)
                             (let ((band 0))(set! precio (* 450 conMR)))
                             (if(= conMR 13)
                                (let ((band 0))(set! precio (* 500 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 625 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                      )
                  )
)
  
  ((= estratoR 3) (if (< altiR 1000)
                      (if (< conMR 17)
                          (let ((band 0))(set! precio (* 680 conMR)))
                          (if(= conMR 17)
                             (let ((band 0))(set! precio (* 730 conMR)) (set! multa "SI")(set! recomendacion 2))
                             (let ((band 0))(set! precio (* 1020 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                      )
                      (if(< altiR 2000)
                         (if (< conMR 14)
                             (let ((band 0))(set! precio (* 680 conMR)))
                             (if(= conMR 14)
                                (let ((band 0))(set! precio (* 730 conMR))(set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 1020 conMR))(set! multa "SI")(set! recomendacion 3))
                             )
                         )
                         (if (< conMR 13)
                             (let ((band 0))(set! precio (* 680 conMR)))
                             (if(= conMR 13)
                                (let ((band 0))(set! precio (* 730 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 1020 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                      )
                  )
)
  
  ((> estratoR 3) (if (< altiR 1000)
                      (if (< conMR 17)
                          (let ((band 0))(set! precio (* 1150 conMR)))
                          (if(= conMR 17)
                                (let ((band 0))(set! precio (* 1725 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 2875 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                      )
                      (if(< altiR 2000)
                         (if (< conMR 14)
                             (let ((band 0))(set! precio (* 1150 conMR)))
                             (if(= conMR 14)
                                (let ((band 0))(set! precio (* 1725 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 2875 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                         (if (< conMR 13)
                             (let ((band 0))(set! precio (* 1150 conMR)))
                             (if(= conMR 13)
                                (let ((band 0))(set! precio (* 1725 conMR)) (set! multa "SI")(set! recomendacion 2))
                                (let ((band 0))(set! precio (* 2875 conMR)) (set! multa "SI")(set! recomendacion 3))
                             )
                         )
                      )
                  )
   )
)




(displayln nombreR)
(displayln apellidoR)
(displayln sexoR)
(displayln fechaR)
(displayln nPersonasR)
(displayln conMR)
(displayln estratoR)
(displayln multa)
(displayln precio)
(if(= recomendacion 1)
     (displayln msj1)
     (if (= recomendacion 2)
         (displayln msj2)
         (if(= recomendacion 3)
            (displayln msj3)
            (displayln msj4))))